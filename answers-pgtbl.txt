问题1：Which other xv6 system call(s) could be made faster using this shared page? Explain how.
①	uptime()：将系统的启动时间或当前时间戳存储在共享页面上。用户态的 uptime() 调用可以直接读取这个页面而不必每次都进行系统调用，从而减少上下文切换的开销。
②	getppid()：将当前进程的父进程ID存储在共享页面上。用户态的getppid()调用可以直接从共享页面读取父进程ID，而不必每次都进行系统调用。
③	getuid() 和 getgid()：将用户ID(UID)和组ID(GID)存储在共享页面上。用户态的getuid()和getgid()调用可以直接从共享页面读取UID和GID，而不必每次都进行系统调用。
④	times()：将进程的时间信息（如用户时间和系统时间）存储在共享页面上。用户态的times()调用可以直接从共享页面读取这些信息，从而减少系统调用的开销。
问题2：Explain the output of vmprint in terms of Fig 3-4 from the text. What does page 0 contain? What is in page 2? When running in user mode, could the process read/write the memory mapped by page 1? What does the third to last page contain?
 
		页表基地址：最高层页表的基地址是0x0000000087f6b000。
第一级页表项：
索引0对应的页表项（PTE）为0x0000000021fd9c01，指向物理地址0x0000000087f67000的下一级页表。
索引255对应的页表项为0x0000000021fda801，指向物理地址0x0000000087f6a000的下一级页表。
第二级页表项：
索引0下的第一个页表项为0x0000000021fd9801，指向物理地址0x0000000087f66000的下一级页表。
索引255下的第一个页表项为0x0000000021fda401，指向物理地址0x0000000087f69000的下一级页表。
第三级页表项：
例如，在第一个索引0下的第二级页表中，索引0的页表项为0x0000000021fda01b，指向物理地址0x0000000087f68000的页。
索引0下的第二级页表中，索引1、2、3的页表项分别指向其他物理地址。
叶子页表项：
在索引255下的第三级页表项：
索引509的页表项为0x0000000021fdcc13，指向物理地址0x0000000087f73000的页。
索引510的页表项为0x0000000021fdd007，指向物理地址0x0000000087f74000的页。
索引511的页表项为0x0000000020001c0b，指向物理地址0x0000000080007000的页。
		页表页0包含最高层页表的页表项。页表页2包含第二级页表的页表项。用户模式下，页表页1映射的内存是只读的，因此进程只能读取这些内存，不能写入。倒数第三页包含用户程序的实际数据或代码。

